{"version":3,"sources":["components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/SearchText.jsx","components/SearchFavorite.jsx","components/SearchSelect.jsx","components/SearchBar.jsx","components/Title.jsx","components/Subtitle.jsx","components/Image.jsx","components/Storyline.jsx","components/RatingComponent.jsx","components/Genre.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","Rating","rating","this","props","data-testid","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","SearchText","onChange","searchText","htmlFor","name","value","type","SearchFavorite","checked","SearchSelect","selected","SearchBar","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","Title","children","Subtitle","Image","Storyline","RatingComponent","Genre","AddMovie","state","genre","baseState","handleChange","bind","handleButton","target","setState","onClick","MovieLibrary","addMovie","filterMovies","console","log","filter","movieIsBookmarked","movieHaveTextValue","filterByGenre","bookmarked","toLowerCase","text","includes","existSearchedTextOnMovie","films","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2384ebed.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 'undefined',\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchText extends Component {\n  render() {\n    const { onChange, searchText } = this.props;\n    return (\n      <div className=\"div-item\">\n        <label\n          className=\"label\"\n          htmlFor=\"search-text\"\n          data-testid=\"text-input-label\"\n        >\n          <span className=\"s-text\">Inclui o texto:</span>\n          <input\n            className=\"input\"\n            data-testid=\"text-input\"\n            name=\"search-text\"\n            value={ searchText }\n            onChange={ onChange }\n            type=\"text\"\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nSearchText.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchText;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchFavorite extends Component {\n  render() {\n    const { onChange, checked } = this.props;\n    return (\n      <div className=\"div-item\">\n        <label\n          className=\"label\"\n          htmlFor=\"search-checkbox\"\n          data-testid=\"checkbox-input-label\"\n        >\n          <span className=\"s-text\"> Mostrar somente favoritos:</span>\n          <input\n            className=\"checkbox\"\n            data-testid=\"checkbox-input\"\n            name=\"search-checkbox\"\n            onChange={ onChange }\n            type=\"checkbox\"\n            checked={ checked }\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nSearchFavorite.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchFavorite;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchSelect extends Component {\n  render() {\n    const { onChange, selected } = this.props;\n    return (\n      <div className=\"div-item\">\n        <label\n          className=\"label\"\n          htmlFor=\"select-genre\"\n          data-testid=\"select-input-label\"\n        >\n          <span className=\"s-text\">Filtrar por gênero:</span>\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              data-testid=\"select-input\"\n              name=\"select-genre\"\n              value={ selected }\n              onChange={ onChange }\n            >\n              <option data-testid=\"select-option\" value=\"\">\n                Todos\n              </option>\n              <option data-testid=\"select-option\" value=\"action\">\n                Ação\n              </option>\n              <option data-testid=\"select-option\" value=\"comedy\">\n                Comédia\n              </option>\n              <option data-testid=\"select-option\" value=\"thriller\">\n                Suspense\n              </option>\n            </select>\n          </div>\n        </label>\n      </div>\n    );\n  }\n}\n\nSearchSelect.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchSelect;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchText from './SearchText';\nimport SearchFavorite from './SearchFavorite';\nimport SearchSelect from './SearchSelect';\n\nclass SearchBar extends Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange,\n    } = this.props;\n    return (\n      <form className=\"search-form\" data-testid=\"search-bar-form\">\n        <h1>Procurar</h1>\n        <SearchText onChange={ onSearchTextChange } searchText={ searchText } />\n\n        <SearchFavorite\n          onChange={ onBookmarkedChange }\n          checked={ bookmarkedOnly }\n        />\n        <SearchSelect\n          onChange={ onSelectedGenreChange }\n          selected={ selectedGenre }\n        />\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Title extends Component {\n  render() {\n    const { value, onChange, children } = this.props;\n    return (\n      <label className=\"label\" htmlFor=\"title\" data-testid=\"title-input-label\">\n        {children}\n        <input\n          className=\"input\"\n          name=\"title\"\n          type=\"text\"\n          data-testid=\"title-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\n// Source: https://stackoverflow.com/questions/42122522/reactjs-what-should-the-proptypes-be-for-this-props-children\nTitle.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Title;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Subtitle extends Component {\n  render() {\n    const { value, onChange, children } = this.props;\n    return (\n      <label className=\"label\" htmlFor=\"subtitle\" data-testid=\"subtitle-input-label\">\n        {children}\n        <input\n          className=\"input\"\n          name=\"subtitle\"\n          type=\"text\"\n          data-testid=\"subtitle-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nSubtitle.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Subtitle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Image extends Component {\n  render() {\n    const { value, onChange, children } = this.props;\n    return (\n      <label className=\"label\" htmlFor=\"imagePath\" data-testid=\"image-input-label\">\n        {children}\n        <input\n          className=\"input\"\n          name=\"imagePath\"\n          type=\"text\"\n          data-testid=\"image-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nImage.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Image;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Storyline extends Component {\n  render() {\n    const { value, onChange, children } = this.props;\n    return (\n      <label className=\"label\" htmlFor=\"storyline\" data-testid=\"storyline-input-label\">\n        {children}\n        <textarea\n          className=\"textarea\"\n          name=\"storyline\"\n          data-testid=\"storyline-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nStoryline.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Storyline;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RatingComponent extends Component {\n  render() {\n    const { value, onChange, children } = this.props;\n    return (\n      <label className=\"label\" htmlFor=\"rating\" data-testid=\"rating-input-label\">\n        {children}\n        <input\n          className=\"input\"\n          name=\"rating\"\n          type=\"number\"\n          data-testid=\"rating-input\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nRatingComponent.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default RatingComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Genre extends Component {\n  render() {\n    const { value, onChange, children } = this.props;\n    return (\n      <label className=\"label\" htmlFor=\"genre\" data-testid=\"genre-input-label\">\n        {children}\n        <div className=\"select\">\n          <select\n            className=\"select\"\n            data-testid=\"genre-input\"\n            name=\"genre\"\n            value={ value }\n            onChange={ onChange }\n          >\n            <option data-testid=\"genre-option\" value=\"action\">\n              Ação\n            </option>\n            <option data-testid=\"genre-option\" value=\"comedy\">\n              Comédia\n            </option>\n            <option data-testid=\"genre-option\" value=\"thriller\">\n              Suspense\n            </option>\n          </select>\n        </div>\n      </label>\n    );\n  }\n}\n\nGenre.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Genre;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from './Title';\nimport Subtitle from './Subtitle';\nimport Image from './Image';\nimport Storyline from './Storyline';\nimport RatingComponent from './RatingComponent';\nimport Genre from './Genre';\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n\n    // Source: https://medium.com/@justintulk/best-practices-for-resetting-an-es6-react-components-state-81c0c86df98d\n    this.baseState = this.state;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleButton() {\n    const { onClick } = this.props;\n    onClick(this.state);\n    this.setState(this.baseState);\n  }\n\n  render() {\n    const { title, subtitle, imagePath, storyline, rating, genre } = this.state;\n    return (\n      <form className=\"addMovie-form\" data-testid=\"add-movie-form\">\n        <h1>Adicionar novo filme</h1>\n        <Title value={ title } onChange={ this.handleChange }>\n          <span className=\"s-text\">Título:</span>\n        </Title>\n        <Subtitle value={ subtitle } onChange={ this.handleChange }>\n          <span className=\"s-text\">Subtítulo:</span>\n        </Subtitle>\n        <Image value={ imagePath } onChange={ this.handleChange }>\n          <span className=\"s-text\">Imagem:</span>\n        </Image>\n        <Storyline value={ storyline } onChange={ this.handleChange }>\n          <span className=\"s-text\">Sinopse:</span>\n        </Storyline>\n        <RatingComponent value={ rating } onChange={ this.handleChange }>\n          <span className=\"s-text\">Avaliação</span>\n        </RatingComponent>\n        <Genre value={ genre } onChange={ this.handleChange }>\n          <span className=\"s-text\">Gênero:</span>\n        </Genre>\n        <button\n          className=\"button is-primary\"\n          type=\"button\"\n          data-testid=\"send-button\"\n          onClick={ this.handleButton }\n        >\n          Adicionar filme\n        </button>\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: props.movies,\n    };\n  }\n\n  onSearchTextChange({ target }) {\n    const { value } = target;\n    this.setState((state) => ({\n      ...state,\n      searchText: value,\n    }), () => this.filterMovies());\n  }\n\n  onBookmarkedChange({ target }) {\n    const { checked } = target;\n    console.log(checked);\n    this.setState((state) => ({\n      ...state,\n      bookmarkedOnly: checked,\n    }), () => this.filterMovies());\n  }\n\n  onSelectedGenreChange({ target }) {\n    const { value } = target;\n    this.setState((state) => ({\n      ...state,\n      selectedGenre: value,\n    }), () => this.filterMovies());\n  }\n\n  filterMovies() {\n    const { movies } = this.props;\n    this.setState((state) => ({\n      ...state,\n      movies: movies.filter((movie) => {\n        if (this.movieIsBookmarked(movie)\n            && this.movieHaveTextValue(movie)\n            && this.filterByGenre(movie)\n        ) {\n          return movie;\n        }\n        return false;\n      }),\n    }));\n  }\n\n  movieIsBookmarked(movie) {\n    const { bookmarked } = movie;\n    const { bookmarkedOnly } = this.state;\n\n    if (bookmarkedOnly) {\n      return bookmarked;\n    }\n    return true;\n  }\n\n  filterByGenre(movie) {\n    const genre = movie.genre.toLowerCase();\n    const { selectedGenre } = this.state;\n\n    return genre === selectedGenre.toLowerCase() || selectedGenre === '';\n  }\n\n  existSearchedTextOnMovie(text) {\n    const { searchText } = this.state;\n    return text.toLowerCase().includes(searchText.toLowerCase());\n  }\n\n  movieHaveTextValue(movie) {\n    const { title, subtitle, storyline } = movie;\n\n    return (this.existSearchedTextOnMovie(title)\n    || this.existSearchedTextOnMovie(subtitle)\n    || this.existSearchedTextOnMovie(storyline));\n  }\n\n  addMovie(movie) {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies: films } = this.state;\n    const {\n      onBookmarkedChange,\n      onSearchTextChange,\n      onSelectedGenreChange,\n      addMovie,\n    } = this;\n    return (\n      <div>\n\n        <SearchBar\n          searchText={ searchText }\n          bookmarkedOnly={ bookmarkedOnly }\n          selectedGenre={ selectedGenre }\n          onSearchTextChange={ onSearchTextChange }\n          onBookmarkedChange={ onBookmarkedChange }\n          onSelectedGenreChange={ onSelectedGenreChange }\n        />\n        <MovieList movies={ films } />\n        <AddMovie onClick={ addMovie } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}